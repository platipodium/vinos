; SPDX-FileCopyrightText: 2022-2023 Universit√§t Hamburg (UHH)
; SPDX-FileCopyrightText: 2022-2023 Helmholtz-Zentrum hereon GmbH (Hereon)
; SPDX-License-Identifier: Apache-2.0
;
; SPDX-FileContributor: Carsten Lemmen <carsten.lemmen@hereon.de>
; SPDX-FileContributor: Sascha Hokamp <sascha.hokamp@uni-hamburg.de>
; SPDX-FileContributor: Jieun Seo <jieun.seo@studium.uni-hamburg.de>

extensions [csv]

breed [boats boat]

boats-own [
  my-id                        ; id of the boat
  fish-catch-boat              ; for each boat a vector of fish catches (per patch or tick)
  harvest-boat                 ; for each boat a vector of total harvest of the fish species
  catch-efficiency-boat        ; how much fish is effectively catched
  boat-capacity                ; size of the boat
  boat-engine-power                 ; power of the engine

  revenue-boat             ; revenue for the fishing trip of the boat
  costs-boat               ; costs for the fishing trip of the boat
  delta-gain-boat          ; change in gain
  gain-boat                ; gain for the fishing trip of the boat
  boat-delta-priorities      ; change in priority
  boat-priorities            ; priority for the pathway
  priority-weighted-average  ; priority weighted average of gain

  fishing-speed            ; speed when fishing (replaced by gear-speed later on)
  steaming-speed           ; speed when steaming

  ; @todo make into a vector for the species
  solea-catch-kg          ; catch of solea in kg for a fishing trip
  solea-catch-euro        ; catch of solea in EUR 2015 for a fishing trip
  platessa-catch-kg       ; catch of platessa in kg for a fishing trip
  platessa-catch-euro     ; catch of platessa in EUR 2015 for a fishing trip
  crangon-catch-kg        ; catch of crangon in kg for a fishing trip
  crangon-catch-euro      ; catch of crangon in EUR 2015 for a fishing trip
  other-catch-kg          ; other catch in kg for a fishing trip
  other-catch-euro        ; other catch in EUR 2015 for a fishing trip

  transportation-costs    ; costs for one km of the fishing trip, not known, work with a parameter
                          ; comment: mainly driven by oil price, approx 10-20 percent of the revenue for crangon, up to 30 percent for solea and platessa according to press relesease March 2022 going up to 50 percent
  operating-costs         ; cost for opertating the boat, not known, work with a parameter
                          ; comment: approximately 50 percent of the revenue
  wage                    ;  wage                               ; wage
  target-species          ; species primarily tragetted (solea, platessa, crangon)
  ;home-port-boat               ; Home Port (in the current state only German home ports are considered
  ;favorite-landing-port-of-boat   ; favorite-landing-port (in the current state there is the one favorite port, which is the landing port)
  pathways                ; possible pathways which boats learn
  boat-gears              ; set of available gears on this boat

]


to setup-boats

  ; read distribution of boat properties
  let lpue-distribution csv-property "LPUE"
  let power-distribution csv-property "VE_KW"
  let distance-distribution csv-property "distance_to_port"
  let triplength-distribution csv-property "triplength"
  let length-distribution csv-property "VE_LEN"
  let hours-distribution csv-property "total_fishinghours"
  
  
  ;faking a slider (equal distribution)

  let wage-min 100 ; value from Sascha
  let wage-max 1000; value from Sascha

  ; faking a slider (normal distribution)

  ; @todo get th fishing speed from gear-speed
  let fishing-speed-mean 5.556 ; unit is km/h (= 3kn)
  let fishing-speed-sdev 0.926 ; unit is km/h (= 0.5kn)

  set-default-shape ports "flag"

  ask home-ports [
     hatch-boats boats-per-port
     [
      create-link-with myself
      move-to [start-patch] of one-of link-neighbors
      set  fish-catch-boat         n-values number-of-gears  [?1 -> 0 ]    ; vector, 4 entries for solea, plaice, crangon and other species
      set  catch-efficiency-boat   n-values number-of-gears  [?1 -> 0.25 ]
      set  revenue-boat            n-values number-of-gears  [?1 -> 0 ]   ; revenue for the fishing trip of the boat
      set  costs-boat              n-values number-of-gears  [?1 -> 0 ]    ; costs for the fishing trip of the boat
      set  gain-boat               n-values number-of-gears  [?1 -> 0 ]    ; gain for the fishing trip of the boat
      set  boat-delta-priorities   n-values number-of-gears  [?1 -> 0 ]    ; change of priority for the pathway
      set  boat-priorities         n-values number-of-gears  [?1 -> 1 / number-of-gears ]    ; priority for the pathway
      set  transportation-costs  0                            ; start value, is calculated according to trip-length, fuel efficiency and oil-price
      set  operating-costs 0                                  ; start value, is calculated according to wage and time at sea
      set  wage  wage-min + random-float (wage-max - wage-min)                                       ; @todo default value
      set  fishing-speed random-normal fishing-speed-mean fishing-speed-sdev                        ; range 2 kn to 4 kn to get km multiply by 1.852 ; ranging from 3.7 to 7.4 km/h
      set  steaming-speed 19                                  ; range 10  to 12
      set  boat-engine-power 200                                      ; kw
      set  boat-capacity 100000                                  ; kg of storage
      set label ""                                             ; ????

      ; Serra: About 160 boats of the entire fleet don't change at all, make them have available only 1 gear
      ; there are smaller groups of boats that do different things.  Only for those allow to have multiple years available
      ; there are some seasonal changes, but likley not at monthly or sub-monthly scale. Let's try 3 months
      ; Also include every 3 months when gear change is deliberated the previous year's experience
      ; Add location and fishing trip length in option pathways.

      set boat-gears n-values number-of-gears [i -> gear i] ; assign a list of gears available in the same order to all the boats
    ]
    ask my-links [set hidden? true]


  ]

   ;ask home-ports [
   ;  hatch-boats boats-per-port [
   ; create-boats sum-boats [
   ;   set shape "flag"
   ;   set size 10
   ;   set home-port-boat (one-of home-ports)
   ;   create-link-with home-port-boat
  ;    move-to [start-patch] of home-port-boat
    ;  set crangon-catch-kg 1 ; default value
   ;   set transportation-costs [port-transportation-costs] of home-port-boat / [port-average-trip-length] of home-port-boat
  ;    set operating-costs [port-operation-costs] of home-port-boat / 365
   ;   ifelse ([port-transportation-costs] of home-port-boat + [port-operation-costs] of home-port-boat) != 0 [

   ;     set catch-efficiency [total-landings-kg] of home-port-boat / ([port-transportation-costs] of home-port-boat + [port-operation-costs] of home-port-boat)
    ;  ][
   ;     set catch-efficiency [total-landings-kg] of home-port-boat / 1
   ;   ]
      ; create actions
      ; assemble these actions in a list
      ; save this as agent-set
    ;  hatch-actions memory-size [

    ;    create-link-with myself]
    ;  set pathways link-neighborstime-at-sea < trip-length / 2

    ;  set time-at-sea 0
    ;]
 ;  ]

end

to-report csv-property [x]
  let filename (word "../data/orey_etal_data/musselabm-" x ".csv")
  report butfirst csv:from-file filename
end

to-report __test_csv_property   
  let lpue csv-property "LPUE"
  report lpue = [[1 41.33597392121994 44.29353998676394 12.592817787094033 11.456572055826198 96.83554521537783] [2 44.896109846997646 44.93153848086322 10.283125939897474 27.14061269693432 63.39053728677305] [3 52.3697708750142 54.51564668646204 15.098579547056138 27.91232373317848 111.57142350676918] [4 3.845738658502041 13.822901977235906 18.237950929313804 0.9253936126421393 60.43421042459698]]
end