; SPDX-FileCopyrightText: 2022 Universit√§t Hamburg (UHH)
; SPDX-FileCopyrightText: 2022-2023 Helmholtz-Zentrum hereon GmbH (hereon)
; SPDX-License-Identifier: Apache-2.0
; SPDX-FileContributor: Sascha Hokamp <sascha.hokamp@uni-hamburg.de>
; SPDX-FileContributor: Carsten Lemmen <carsten.lemmen@hereon.de>

to plot-setup-catch-by-gear
  set-current-plot "catch-by-gear"
  set-plot-background-color white 
  
  foreach range length gear-names [ [i] ->
    let pen-name  item i gear-names
    if not plot-pen-exists?  pen-name [ create-temporary-plot-pen pen-name ]
    set-current-plot-pen pen-name
    set-plot-pen-color 135 - 10 * i
    set-plot-pen-interval 1 
    auto-plot-on
    set-plot-pen-mode 0 ; line
  ]
end

to plot-update-catch-by-gear
  set-current-plot "catch-by-gear"
  ; foreach prey-names [0 1 2] [[s i] ->
  foreach range length gear-names [[i] ->
    let pen-name  item i gear-names
    set-current-plot-pen pen-name
    ;set-plot-x-range 0 max
    plotxy ticks sum [item i boat-gear-catches] of boats
  ]
end

to plot-setup-gain-by-gear
  set-current-plot "gain-by-gear"
  set-plot-background-color white 
  
  foreach range length gear-names [ [i] ->
    let pen-name  item i gear-names
    if not plot-pen-exists?  pen-name [ create-temporary-plot-pen pen-name ]
    set-current-plot-pen pen-name
    set-plot-pen-color 135 - 10 * i
    set-plot-pen-interval 1 
    auto-plot-on
    set-plot-pen-mode 0 ; line
  ]
end

to plot-update-gain-by-gear
  set-current-plot "gain-by-gear"
  ; foreach prey-names [0 1 2] [[s i] ->
  foreach range length gear-names [[i] ->
    let pen-name  item i gear-names
    set-current-plot-pen pen-name
    ;set-plot-x-range 0 max
    plotxy ticks sum [item i boat-gains] of boats
  ]
end


to plot-setup-catch-by-trip
  set-current-plot "catch-by-trip"
  ;set-plot-x-range min-pxcor max-pxcor
  ;set-plot-y-range 0 10
  auto-plot-on
  set-histogram-num-bars 9
  let pen-name "hist"
  if not plot-pen-exists? pen-name [ create-temporary-plot-pen pen-name ]
end


to plot-update-catch-by-trip
  set-current-plot "catch-by-trip"
  let pen-name "hist"
  set-current-plot-pen pen-name
  set-plot-pen-mode 1 ; box
  histogram [wage] of boats
end

to plot-setup-priority-by-gear
  set-current-plot "priority-by-gear"
  set-plot-background-color white 
  
  foreach range number-of-gears [ [i] ->
    let pen-name  item i gear-names
    if not plot-pen-exists?  pen-name [ create-temporary-plot-pen pen-name ]
    set-current-plot-pen pen-name
    set-plot-pen-color 135 - 10 * i
    auto-plot-on
    set-plot-x-range 0 1
    set-histogram-num-bars 9
    set-plot-pen-mode 1 ; box
  ]
end


to plot-update-priority-by-gear
  set-current-plot "priority-by-gear"
   foreach range number-of-gears [[i] ->
    let pen-name  item i gear-names
    set-current-plot-pen pen-name
    histogram [item i boat-gear-priorities] of boats ;@to do problem wrong message recipient
  ]
end


to plot-setup-boat-property
  set-current-plot "boat-property"
  set-plot-background-color white 
  auto-plot-on
end

to plot-update-boat-property
  set-current-plot "boat-property"
  if not plot-pen-exists? boat-property-chooser [ 
    clear-plot
    create-temporary-plot-pen boat-property-chooser
    set-plot-pen-mode 1 ; box
  ]
  let _x-range (list 0 1)
  set-current-plot-pen boat-property-chooser  
  let _values [ boat-max-duration] of boats 
  ifelse (boat-property-chooser =  "trip-phase" ) or (boat-property-chooser =  "type" ) [ 
    if (boat-property-chooser = "trip-phase") [
      set _values [ boat-trip-phase] of boats 
      set-histogram-num-bars 5
      set _x-range (list -.5 5.5)
    ]
    if (boat-property-chooser = "type") [
      set _values [ boat-type] of boats 
      set-histogram-num-bars 4
      set _x-range (list -.5 3.5)
    ]
  ][
    if ( boat-property-chooser =  "max-duration" ) [ set _values [ boat-max-duration] of boats ]
    if ( boat-property-chooser =  "max-distance" ) [ set _values [ boat-max-distance] of boats ]
    if ( boat-property-chooser =  "time-at-sea" ) [ set _values [ boat-time-at-sea] of boats ]
    if ( boat-property-chooser =  "time-at-sea-left" ) [ set _values [ boat-time-at-sea-left] of boats ]
    if ( boat-property-chooser =  "distance-at-sea" ) [ set _values [ boat-distance-at-sea] of boats ]
    if ( boat-property-chooser =  "length" ) [ set _values [ boat-length] of boats ]
    if ( boat-property-chooser =  "capacity" ) [ set _values [ boat-capacity] of boats ]
    if ( boat-property-chooser =  "catch-efficiency" ) [ set _values [ catch-efficiency-boat] of boats ]
    if ( boat-property-chooser =  "engine" ) [ set _values [ boat-engine] of boats ]
    if ( boat-property-chooser =  "steaming-speed" ) [ set _values [ boat-steaming-speed] of boats ]
    if ( boat-property-chooser =  "transportation-costs" ) [ set _values [ boat-transportation-costs] of boats ]
    if ( boat-property-chooser =  "operating-costs" ) [ set _values [ boat-operating-costs] of boats ]
 
    set-histogram-num-bars 9
    set _x-range (list (min _values) (max _values))
  ]
  if (item 0 _x-range) = (item 1 _x-range) [set _x-range replace-item 1 _x-range (item 1 _x-range + 1)]
  set-plot-x-range item 0 _x-range item 1 _x-range
  histogram _values
  
end

to update-drawings
  clear-drawing
  ask ports [set hidden? not show-ports?]
  ask boats [set hidden? not show-boats?]
  if owf? [ show-windfarms]
  if sar? [ draw-background "SAR" ]
  display
end



