; SPDX-FileCopyrightText: 2023-2024 Helmholtz-Zentrum hereon GmbH
; SPDX-License-Identifier: Apache-2.0
; SPDX-FileContributor: Carsten Lemmen <carsten.lemmen@hereon.de>

breed [legends legend]

globals [
  gis-envelope
]

legends-own [
  legend-title
  legend-colors
  legend-size
  legend-items
  legend-patches
  legend-bbox
  legend-labels
]

breed [legend-entries legend-entry]

to draw-legend [ colors labels]
  ask legends [ die ]
  ask legend-entries [ die ]
  let legend-pad 4
  create-legends 1 [
    set legend-size length colors
    set legend-colors colors
    set legend-labels labels
    ; todo add title
    hatch-legend-entries legend-size [
      set shape "square"
      set size 3
    ]
    set legend-items sort  legend-entries with [shape = "square"]
    foreach range legend-size [ i ->
      ask item i legend-items [
        setxy ( min-pxcor + legend-pad )  max-pycor - 20 - 1.5 - 3 * ( [legend-size] of myself) + 1  + 3 * i
        set color item i ( [legend-colors] of myself )
      ]
    ]

    hatch-legend-entries length legend-labels [
      set shape "circle"
      set size 0.1
    ]
    set legend-items sort legend-entries with [shape = "circle"]
    foreach range length legend-items [ i ->
      ask item i legend-items [
         setxy ( min-pxcor + legend-pad + 13 ) (max-pycor - 20 - 3 *  ( [legend-size] of myself + 1) + 1 + 3 * i - 1)
         set label-color black
        set label item i [legend-labels] of myself
      ]
    ]
  ]

  ; draw the background (bbox)
  ask patches with [pxcor >= min-pxcor + 2 and pxcor <= min-pxcor + 20
       and pycor > max-pycor - 20 - legend-pad - 3 * ( length labels ) and pycor < max-pycor - 8][
    set pcolor grey
    set plabel ""
  ]

end

; Observer procedure to set legend title and unit, which can be provided as a list
; or as a string (then only the title is set)
to set-legend-title [_string]
  let _unit ""
  let _title ""
  ifelse is-list? _string  [
    if length _string > 1 [ set _unit  (word item 1 _string) ]
    if length _string > 0 [ set _title (word item 0 _string) ]
  ][
    set _title (word _string)
  ]

  let legend-pad 4
  if any? legends [
    ask patch (min-pxcor + 20 - legend-pad) (max-pycor - 11) [
      ;set pcolor cyan
      set plabel-color black
      set plabel _title
    ]
    ; A vertical spacing of 4 works well
    ask patch (min-pxcor + 20 - legend-pad) (max-pycor - 15) [
      ;set pcolor cyan
      set plabel-color black
      set plabel _unit
    ]
  ]
end


to show-values
  ask water-patches with [pxcor mod 10 = 0 and  pycor mod 10 = 0  and is-number? temporary and temporary != -9999][
    set plabel round temporary
    set plabel-color white ; todo adapt to pcolor
  ]
end

; This routine changes the scene (and all of the data behind) to zoom in on
; the German Bight only.  This allows higher resolution (but remember that the
; data itself is only coarse) and is an experimental feature.
to zoom-scene

  ; the default envelope given by the SNS dataset is [2 10 53 56]
  set gis-envelope (list 2 10 53 56)           ; default including entire EEZ
  set gis-envelope (list 5.5 9.5 53.2 54.7)    ; this is the same projection but at twice default resolution
  set gis-envelope (list 6.4 9.14 53.25 55.1)  ; a rather distorted view, but concentrating on German waters

  ask (turtle-set actions ports boats) [die]

  setup-maps
  reset-patches

  calc-pollution
  calc-fish

  setup-preys

  setup-ports
  calc-initial-values
  calculate-distance-to-port

  setup-boats

  setup-plots

  set scene-legend-n 9
  update-scene
  update-drawings
  setup-logo
  display

  reset-ticks

end

; Observer procedure reporting the area factor between the default data resolution of effort
; at 0.05 x 0.05 degree to the current resolution.  The default display area is 320x120 pixels
; and gis-envelope (list 2 10 53 56), so 8 x 3 degree, with resolution
; 8/320 = 2/120 = 1/40 = 0.025 degree.
to-report area-factor
  report ((item 3 gis-envelope - item 2 gis-envelope) / 3 * (item 1 gis-envelope - item 0 gis-envelope) / 8 ) / 4
end

to-report emodnet-effort
  show-dataset "EMODnet effort"
  report round sum [ temporary * area ] of water-patches
end

to-report gfw-effort
  show-dataset "GFW effort"
  ; this dataset is in h, so convert to MWh with simulated data
  report round sum [ temporary * area * sum patch-monthly-effort-mwatthours / sum patch-monthly-effort-hours] of water-patches with [sum patch-monthly-effort-hours > 0]
end
