; SPDX-FileCopyrightText: 2022-2023 Universit√§t Hamburg (UHH)
; SPDX-FileCopyrightText: 2022-2023 Helmholtz-Zentrum hereon GmbH (hereon)
; SPDX-License-Identifier: Apache-2.0
; SPDX-FileContributor: Sascha Hokamp <sascha.hokamp@uni-hamburg.de>
; SPDX-FileContributor: Carsten Lemmen <carsten.lemmen@hereon.de>

to setup-maps
  
  no-display

  let bathymetry-dataset gis:load-dataset "../data/gebco/gebco_2021_n56.0_s53.0_w2.0_e10.0.asc"
  let platessa-summer-dataset gis:load-dataset "../data/thuenen/dist_ran.forest_pleuronectes.platessa_summer.asc"
  let platessa-winter-dataset gis:load-dataset "../data/thuenen/dist_ran.forest_pleuronectes.platessa_winter.asc"
  let crangon-summer-dataset gis:load-dataset "../data/thuenen/dist_ran.forest_crangon.crangon_summer.asc"
  let crangon-winter-dataset gis:load-dataset "../data/thuenen/dist_ran.forest_crangon.crangon_winter.asc"
  let solea-summer-dataset gis:load-dataset "../data/thuenen/dist_ran.forest_solea.solea_summer.asc"
  let solea-winter-dataset gis:load-dataset "../data/thuenen/dist_ran.forest_solea.solea_winter.asc"
  
  ; Set the world envelope to the union of all of our dataset's envelopes
  gis:set-world-envelope (gis:envelope-union-of (gis:envelope-of bathymetry-dataset)
;                                                (gis:envelope-of crangon-summer-dataset)
;                                               (gis:envelope-of crangon-winter-dataset)
;                                                (gis:envelope-of platessa-summer-dataset)
;                                                (gis:envelope-of platessa-winter-dataset)
;                                                (gis:envelope-of solea-summer-dataset)
;                                                (gis:envelope-of solea-winter-dataset)
  )

  ;gis:set-world-envelope (list 6.7 8.0 53.2 56.5)

  gis:apply-raster bathymetry-dataset depth
  
  ; The following removes NaN values which are not allowed
  ask patches with [not (depth <= 0 or depth > -1) ] [ set depth 9999 ]
  
  ; Convert from bathymetry to depth
  ask patches [ set depth ( - depth)]
  
  gis:apply-raster crangon-summer-dataset crangon-summer
  ask patches with [not (crangon-summer < 0 or crangon-summer > -1) ] [ set crangon-summer -9999 ]

  gis:apply-raster crangon-winter-dataset crangon-winter
  ask patches with [not (crangon-winter < 0 or crangon-winter > -1) ] [ set crangon-winter -9999 ]

  gis:apply-raster solea-summer-dataset solea-summer
  ask patches with [not (solea-summer < 0 or solea-summer > -1) ] [ set solea-summer -9999 ]

  gis:apply-raster solea-winter-dataset solea-winter
  ask patches with [not (solea-winter < 0 or solea-winter > -1) ] [ set solea-winter -9999 ]

  gis:apply-raster platessa-summer-dataset platessa-summer
  ask patches with [not (platessa-summer < 0 or platessa-summer > -1) ] [ set platessa-summer -9999 ]

  gis:apply-raster platessa-winter-dataset platessa-winter
  ask patches with [not (platessa-winter < 0 or platessa-winter > -1) ] [ set platessa-winter -9999 ]

end

; EmodNet provides human activities at https://www.emodnet-humanactivities.eu/download-data.php. 
; After providing your country and sector, the wind farm polygon areas are freely available. 
to show-windfarms
  
  set owf-dataset load-dataset "OWF"
  
  ;foreach gis:feature-list-of owf-dataset [     
  ;  this-owf-vector-feature -> gis:set-property-value this-owf-vector-feature "POWER_MW" read-from-string gis:property-value this-owf-vector-feature "POWER_MW" 
  ;]

  gis:apply-coverage owf-dataset "POWER_MW" owf-fraction
  ask patches with [not (owf-fraction < 0 or owf-fraction > -1) ] [ set owf-fraction 0 ]

  gis:set-drawing-color red
  gis:draw owf-dataset 1
  
end

to load-plaice-box
  let _dataset  gis:load-dataset "../data/plaicebox/DB_PlaiceBox_WGS84_vTIwi_Jan2001_G.shp"
  ask patches gis:intersecting _dataset [ set plaice-box? true ]  

  gis:set-drawing-color blue - 3
  gis:draw _dataset 1
end


to draw-dataset [_dataset-name _color]
  gis:set-drawing-color _color
  gis:draw load-dataset _dataset-name 1
end

to-report load-dataset [_dataset-name]
  
  if _dataset-name = "Natura2000" [ report gis:load-dataset "../data/natura2000/northsea/MPA_NorthSea_Shapes.shp"]
  if _dataset-name = "NP" [ report gis:load-dataset "../data/nlwkn/NLP/Nationalparke_DTK25.shp"]
  if _dataset-name = "ICES" [ report gis:load-dataset "../data/ices/ICES_Statistical_Rectangles_Eco.shp"]
  if _dataset-name = "EEZ" [ report gis:load-dataset "../data/eez/eez.shp"]
  if _dataset-name = "Plaicebox" [ report gis:load-dataset "../data/plaicebox/DB_PlaiceBox_WGS84_vTIwi_Jan2001_G.shp"]
  if _dataset-name = "OWF" [ report gis:load-dataset "../data/emodnet/EMODnet_HA_WindFarms_pg_20220324.shp"]
  if _dataset-name = "SNS" [ report gis:load-dataset "../data/coastline/sns_waterbody.shp"]

  print (sentence "Invalid dataset name" _dataset-name ".  Valid are 'Natura2000', 'NP', 'ICES','Plaicebox','EEZ','OWF','SNS'")
  report nobody
end

to-report __test-load-dataset
  if load-dataset "Natura2000" = nobody [report false]
  if load-dataset "NP" = nobody [report false]
  if load-dataset "ICES" = nobody [report false]
  if load-dataset "EEZ" = nobody [report false]
  if load-dataset "Plaicebox" = nobody [report false]
  if load-dataset "OWF" = nobody [report false]
  if load-dataset "SNS" = nobody [report false]
  report true  
end

to-report  __test-draw-dataset
  
  foreach (list "Natura2000" "NP" "ICES" "EEZ" "Plaicebox" "OWF" "SNS") [ i -> 
    draw-dataset i 5 + 10 * (random 14) 
  ]
  report true
end

; The `import-wms-drawing` primitive asks a server (in this case one run by
; terrestris.de, a german GIS company that offers a WMS for the public)
; for the section of the map within the current world envelope
; and then draws it to the screen.
;
; In addition to the url of the WMS server, you must also supply the EPSG code
; for the projection you want to use and the name of the layer you want to grab
; from that server as well as a transparency parameter from 0 to 255.
; If you do not know what EPSG code to use, 4326, the code for WGS84, should
; provide good-enough results.
to draw-background [X]

  if member? X  (list "OSM" "SAR" "CHL") [ clear-drawing]
  
  carefully [
    if X = "OSM" [gis:import-wms-drawing "https://ows.terrestris.de/osm/service?" "EPSG:4326" "OSM-WMS" 200]
    if X = "SAR" [gis:import-wms-drawing "http://coastmap.hzg.de/server/services/NOAH_geoDB/TI_SARnested/MapServer/WMSServer?" "EPSG:4326" "0" 100]
    if X = "CHL" [gis:import-wms-drawing "https://coastmap.hzg.de/server/services/MOSSCO/MOSSCO_chlorophyll/MapServer/WmsServer?" "EPSG:4326" "0" 200]
  ][ 
    show word "Could not load " X
  ]
  
end





