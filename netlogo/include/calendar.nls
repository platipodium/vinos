; SPDX-FileCopyrightText: 2022-2023 Helmholtz-Zentrum hereon GmbH
; SPDX-License-Identifier: Apache-2.0
; SPDX-FileContributor: Carsten Lemmen <carsten.lemmen@hereon.de>

; Simple calendar implementation using the time extension

extensions [ time ]

globals [
  date ; a logotime object representing absolute date
  holidays-germany ; a logotime series with dates and names of holidays
  holidays-morocco ; a logotime series eid-al-fitr dates, ending Ramadan
  holiday?
  storm?
  ramadan?
  start-date
  datetime
]

to setup-calendar

  ; for localization purposes, get the full month names
  let _month-names n-values 12 [ i ->
    time:show  time:create (word "2023/" (i + 1) "/01") "MMMM"
  ]
  let _time-formats (list "d-" "d-M" "d-MM" "dd-" "dd-M" "dd-MM" )
  set _time-formats map [ _tf -> (word _tf "MM-yyyy") ] _time-formats

  set days-in-months (list 31 28 31 30 31 30 31 31 30 31 30 31 )

  if date = nobody [
    set date logodate-from-datetime

    ; Now add to the current time the offset
    set date time:plus date time-offset "months"
  ]

  set year time:get "year" date
  set month time:get "month" date
  set day time:get "day"	date
  set day-of-year time:get "dayofyear" date

  set holidays-germany ts-load "../data/holidays/holidays_DE.csv"

  ; Moroccan holidays are not yet used, but it has been shown that
  ; the Ramadan season does play a role in processing the shrimp.
  ; The Moroccan factories, property of the commercialising firms,
  ; shell currently 90% of the German catches [71]
  set holidays-morocco ts-load "../data/holidays/eid-al-fitr.csv"

  set holiday? is-holiday?
  set storm? is-storm?
  set ramadan? is-ramadan?
  set start-date date
  set datetime date2datetime

  ; Anchoring to ticks created problems when not called during
  ; startup, so this is disabled for now
  ;set date time:anchor-to-ticks date 1 "day"
  ;set datetime time:anchor-to-ticks date2datetime 1 "day"

end

; Advance the calendar by one day, note that if the date itself
; it is linked to ticks and automatically increases upon tick
to advance-calendar

  set date time:plus date 1 "days"
  set datetime time:plus datetime 1 "days"

  set year time:get "year" date
  set month time:get "month" date
  set day time:get "day"	date
  set day-of-year time:get "dayofyear" date

  set holiday? is-holiday?
  set storm? is-storm?
  set ramadan? is-ramadan?

  ; Every first of the month, ask the water patches to reset their
  ; monthly storage.
  ;if day = 1 [ ask water-patches [reset-monthly] ]
  if day = 1 [reset-monthly]
end

to-report datetime-string
  report (word time:show date "EEE yyyy-MM-dd" " (" time:get "dayofyear" date ")")
end

to-report date2datetime
  report (word time:show date "yyyy-MM-dd" " 00:00:00")
end


to-report date-short
  report time:show date "yyyyMMdd"
end

to-report datetime-short
  report time:show datetime "yyyyMMdd-HHmm"
end

to-report datetime-long
  report time:show datetime "MMM dd HH:mm"
end


to-report is-holiday?
  report (ts-member? holidays-germany date) or (time:get "dayofweek" date mod 7 = 0)
end

to-report is-ramadan?
  let _eid ts-nearest holidays-morocco date
  report time:is-between? date (time:plus _eid -29 "day") _eid
end

to-report logodate-from-format [ date-string format-string ]
  let _logodate nobody
  carefully [
    set _logodate time:create-with-format date-string format-string
  ][
  ]
  report _logodate
end

to-report logodate-from-datetime
  ; date-and-time gives a locale-dependent and JVM precision-dependent
  ; output.  The YMD is the last part of the string in format
  ; dd-MMM-yyyy  (MMM as a localized three-letter string, but also allowing
  ; a period at the end)
  ; but on some systems, d is single digits and M is MM or MMM or MMM.
  ; The date-and-time string's date information is the last item of a
  ; space-separated string

  let _ymd last split " " date-and-time
  let _ymdlist split "-" _ymd
  let _m item 1 _ymdlist
  let _format "d"
  if length item 0 _ymdlist > 1 [set _format (word _format "d")]
  set _format (word _format "-MM")
  if length _m > 2 [set _format (word _format "M")]
  if length _m > 3 and last _m != "."  [set _format (word _format "M")]
  set _format (word _format "-yyyy")
  report time:create-with-format (last split " " date-and-time) _format
end

to-report is-storm?
  ; Now introduce some weather, based on statistics of wind speeds exceeding
  ; 38 mph from meteoblue.com
  let _days-with-storm (list 2.6 2.7 1.9 0.3 0 0 0 0 0 0.1 0.6 2.0)
  let _month-index  (time:get "month" date) - 1
  let _threshold item _month-index _days-with-storm
  report random-float (item _month-index days-in-months) < _threshold
end

; Observer procedure that reports the number of days that have passed either
; since the beginning of the simulation or since the last complete year, and
; consider that for monthly data storage we only save full month data.  So
; the number of days is 11 full month + the days in the current month
to-report days-in-past-year
  let _yeardays 0
  carefully [if ticks < 366 [set _yeardays ticks]][set _yeardays -1]
  if _yeardays < 0 [report 0]
  if ticks < 366 [report ticks]

  ;let _imonth time:plus 11 "month" date
  set _yeardays time:difference-between date (time:plus date -1 "years") "days"
  let _monthdays time:difference-between date (time:create (word (time:get "year" date) "-" (time:get "month" time:plus date 1 "months") "-1")) "days"
  report ( - _yeardays - _monthdays)
end

to-report logodate [_arg]
  if is-agentset? _arg or is-list? _arg [ report nobody ]
  if is-number? _arg [ report time:create (word round _arg "-01-01") ]
  if is-string? _arg [ report time:create _arg ]
  report _arg
end

to-report __test-logodate
  let _date time:create "2022-01-01"
  let _string time:show _date "yyyy-MM-dd"
  if _string != time:show logodate 2022 "yyyy-MM-dd" [ print (word "Cannot convert 2022 to time:date " logodate 2022 _date) report false ]
  if _string != time:show logodate "2022-01-01" "yyyy-MM-dd" [ print "Cannot convert '2022-01-01' to time:date" report false ]
  if _string != time:show logodate time:create "2022-01-01" "yyyy-MM-dd"  [ print "Cannot convert logodate to time:date" report false ]
  report true
end
